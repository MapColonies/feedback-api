name: pull_request

on: [pull_request, workflow_dispatch]

jobs:
  eslint:
    name: Run eslint
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.github_token }}
          eslint: true
          prettier: true
          eslint_extensions: ts

      - name: OpenAPI Lint Checks
        if: ${{ inputs.enableOpenApiCheck == true }}
        uses: nwestfall/openapi-action@v1.0.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ inputs.openApiFilePath }}

  tests:
      name: Run Tests
      runs-on: ubuntu-latest

      services:
        redis:
          image: redis:7.2.3
          env:
            ALLOW_EMPTY_PASSWORD: yes
            REDIS_MAXCLIENTS: 100
          ports: 
            - 6379:6379

          options: >-
            --health-cmd "redis-cli ping"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      strategy:
        matrix:
          node: [18.x, 20.x]

      steps:
        - name: Check out Git repository
          uses: actions/checkout@v2

        - name: Set up Node.js
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node }}

        - name: Install Node.js dependencies
          run: npm ci

        - name: Create Redis PubSub
          run: |
            docker exec $(docker ps -qf "ancestor=redis:7.2.3") \
            redis-cli config set notify-keyspace-events KEA

        - name: Run tests
          run: npm run test

        - uses: actions/upload-artifact@v4
          with:
            name: Test Reporters (Node ${{ matrix.node }})
            path: reports/**

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build_image:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: build Docker image
        run: docker build -t test-build:latest .